WebSecurityConfigAdapter

USerDetailsService ?

- loadUserByUsername

Pelo que to entendendo, faz primeiro um login com usuário e senha, do qual vem um token

- Com esse token, autentica nas próximas vezes 
- Quando o token expira, usa um refresh token
- E faz isso para sempre? 

- Como seria esta primeira autenticação?

- E se perder o token / refresh token ?


-> Insere uma dependẽncia ao JWT, escreve a lógica para criar e validar o JWT, e aí irá usar ele

-> endpoint pra autenticação, pra onde redireciona pra devolver o token

-- Dá de especificar literalmente os endpoints que serão ou não permitidos no:
SecurityConfig extends WebSecurityConfigAdapter , por meio do configure, http. ...

- Depois, pra cada request, envia o Token e manda o Spring decodificar o token, autenticar e ver se passa
- Se faz isso usando um "filter"


- O que é SecurityContextHolder() ???

- O cliente vai ter que escrever alguma lógica para enviar o username e password se não tiver o token... e se tiver, não precisa.. e salva o token em algum lugar, como a sessão ou uma base de dados interna deles... ( e isso eu preciso deixar claro na documentação )

- E aí tem que ver o tal do refresh token!


 - Para o cliente, ele vai ter que fazer login em um endpoint como /authenticate, 
  - pegar o token que ele recebe daí
  - salvar o token em algum lugar
  - e usar esse token em todos os requests
  
  
  Refresh Token
  Do jeito que ele explicou;
  Faz login
  Ganha um token e um refresh token
  Guarda o refresh token em uma tabela no servidor, com uma data de expiração
  Se o token expirou
  Tem que pedir um novo token usando o refresh token
  manda só o refresh token pra outro endpoint como /refresh
  e aí vai checar a autenticidade do refresh token
  E vai enviar novamente um acess Token + gerar novo refresh token
  
  Ok... e aí faz o access Token expirar em, digamos, uma hora
  E o refresh Token expira em... um dia?
  
  Então... 
  Envia login e senha 1 vez por dia
  O mesmo access token é enviado mútliplas vezes por uma hora
  O refresh token é enviado 1 vez só por hora (no máximo 24 vezes em um dia)
 
  ... isso torna mais difícil de interceptar, certo....
  
  Minha dúvida foi só o seguinte... por que armazenar o refresh token em um banco de dados
  Pq só não mandar dois JWT logo?
  
  
-> Usar Client Credentials para M2M (machine to machine)
-> Usar Authorization Flow pra autorizar usuários humanos  


