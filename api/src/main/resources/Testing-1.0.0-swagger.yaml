openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/JULIANAHACHMANN_1/Testing/1.0.0
  - description: API Server - Version 1.0.0
    url: https://base_url/v1
  
info:  
  version: "1.0.0"
  title: Estagios
  description: Uma API para conectar empresas e  instituicoes de ensino em torno de um unico objetivo - vagas de estagio!

paths:
  /me:
    get: 
      tags:
        - Perfil
      operationId: getPerfil
      summary: Meu Perfil
      description: Retorna suas informações de perfil
      responses:
        '200':
          $ref: '#/components/responses/MeuPerfil'
        '400': 
          $ref: '#/components/responses/BadRequest'
        '401': 
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':  
          $ref: '#/components/responses/TooManyRequests'
        default: 
          $ref: '#/components/responses/UnexpectedError'
      x-swagger-router-controller: ZWave

    post:
      tags:
        - Perfil
      operationId: createPerfil
      summary: Cadastrar 
      #description: ADD     
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Perfil'
      responses:
        '201':
          $ref: '#/components/responses/MeuPerfil'
        '400': 
          $ref: '#/components/responses/BadRequest'
        '401': 
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':  
          $ref: '#/components/responses/TooManyRequests'
        default: 
          $ref: '#/components/responses/UnexpectedError'
      x-swagger-router-controller: ZWave

    put:
      tags:
        - Perfil
      operationId: editPerfil
      summary: Editar perfil
      description: Editar informações do seu perfil
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Perfil'
      responses: 
        '201':
          $ref: '#/components/responses/MeuPerfil'
        '400': 
          $ref: '#/components/responses/BadRequest'
        '401': 
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':  
          $ref: '#/components/responses/TooManyRequests'
        default: 
          $ref: '#/components/responses/UnexpectedError'
      x-swagger-router-controller: ZWave

    delete: 
      tags:
        - Perfil
      operationId: deletePerfil
      summary: Deletar perfil
      description: Deletar seu perfil
      responses: 
        '204': 
          description: Perfil deletado com sucesso
        '400': 
          $ref: '#/components/responses/BadRequest'
        '401': 
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':  
          $ref: '#/components/responses/TooManyRequests'
        default: 
          $ref: '#/components/responses/UnexpectedError' 
      x-swagger-router-controller: ZWave    

  /vagas/mine:
    get:
      tags:
        - Vagas
      operationId: getMyVagas
      summary: Minhas Vagas
      description: Retorna a lista com as suas vagas, que corresponde aos critérios de busca. Se nenhum filtro é informado, retorna todas as vagas
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/area'
        - $ref: '#/components/parameters/ies'
        - $ref: '#/components/parameters/horario'
        - $ref: '#/components/parameters/publicado_apos'
        - $ref: '#/components/parameters/curso'
        - $ref: '#/components/parameters/modalidade'
      responses:
        '200':
          $ref: '#/components/responses/MuitasVagas'
        '400': 
          $ref: '#/components/responses/BadRequest'
        '401': 
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':  
          $ref: '#/components/responses/TooManyRequests'
        default: 
          $ref: '#/components/responses/UnexpectedError'
      x-swagger-router-controller: ZWave
      
  /vagas/for_me:
    get: 
      tags: 
        - Vagas
      # operationId: 
      summary: Vagas para mim
      description: Vagas disponíveis para a instituição
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/area'
        - $ref: '#/components/parameters/ofertado_por'
        - $ref: '#/components/parameters/horario'
        - $ref: '#/components/parameters/publicado_apos'
        - $ref: '#/components/parameters/curso'
        - $ref: '#/components/parameters/modalidade'
      responses:
        '200':
          $ref: '#/components/responses/MuitasVagas'
        '400': 
          $ref: '#/components/responses/BadRequest'
        '401': 
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':  
          $ref: '#/components/responses/TooManyRequests'
        default: 
          $ref: '#/components/responses/UnexpectedError'     
      x-swagger-router-controller: ZWave
      
  /vagas:
    post:
      tags:
        - Vagas
      operationId: createVaga
      summary: Criar Nova Vaga
      description: Adicionar uma nova vaga no sistema
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vaga'
      responses:
        '201':
          $ref: '#/components/responses/UmaVaga'
        '400': 
          $ref: '#/components/responses/BadRequest'
        '401': 
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':  
          $ref: '#/components/responses/TooManyRequests'
        default: 
          $ref: '#/components/responses/UnexpectedError'
      x-swagger-router-controller: ZWave

  /vagas/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      tags:
        - Vagas
      operationId: getVagaPorId
      #summary: ADD
      #description: ADD
      responses: 
        '200':
          $ref: '#/components/responses/UmaVaga'
        '400': 
          $ref: '#/components/responses/BadRequest'
        '401': 
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':  
          $ref: '#/components/responses/TooManyRequests'
        default: 
          $ref: '#/components/responses/UnexpectedError'
      x-swagger-router-controller: ZWave
    put:
      tags:
        - Vagas
      operationId: editVaga
      summary: Editar uma Vaga
      # description: 
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vaga'
      responses:
        '201':
          $ref: '#/components/responses/UmaVaga'
        '400': 
          $ref: '#/components/responses/BadRequest'
        '401': 
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':  
          $ref: '#/components/responses/TooManyRequests'
        default: 
          $ref: '#/components/responses/UnexpectedError'
      x-swagger-router-controller: ZWave
    delete:
      tags:
        - Vagas
      operationId: deleteVaga
      summary: Deletar Vaga
      # description: 
      responses:
        '204':
          description: Vaga deletada com sucesso
        '400': 
          $ref: '#/components/responses/BadRequest'
        '401': 
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':  
          $ref: '#/components/responses/TooManyRequests'
        default: 
          $ref: '#/components/responses/UnexpectedError'
      x-swagger-router-controller: ZWave
      
  /vagas/mine/denuncias: 
    get: 
      tags: 
        - Denúncias
      #operationId: 
      #summary: 
      description: Denúncias de todas as suas vagas
      responses: 
        '200':
          $ref: '#/components/responses/MuitasDenuncias'
        '400': 
          $ref: '#/components/responses/BadRequest'
        '401': 
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':  
          $ref: '#/components/responses/TooManyRequests'
        default: 
          $ref: '#/components/responses/UnexpectedError'     
  

      
  /vagas/for_me/denuncias:
    get: 
      tags: 
        - Denúncias
      #operationId: 
      #summary: 
      description: Denúncias relacionadas com todas as vagas que estão ofertadas para a sua insituição de ensino
      responses: 
        '200':
          $ref: '#/components/responses/MuitasDenuncias'
        '400': 
          $ref: '#/components/responses/BadRequest'
        '401': 
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':  
          $ref: '#/components/responses/TooManyRequests'
        default: 
          $ref: '#/components/responses/UnexpectedError'     
  
  #
  /vagas/{id}/denuncias:
    parameters: 
      - $ref: '#/components/parameters/id'
    get: 
      tags: 
        - Denúncias
      #operationId: 
      #summary: 
      description: Denúncias relacionadas a determinada vaga
      responses: 
        '200':
          $ref: '#/components/responses/MuitasDenuncias'
        '400': 
          $ref: '#/components/responses/BadRequest'
        '401': 
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':  
          $ref: '#/components/responses/TooManyRequests'
        default: 
          $ref: '#/components/responses/UnexpectedError'
    post: 
      tags:
        - Denúncias
      #operationId: 
      #summary: 
      description: Adicionar uma denúncia a uma determinada vaga
      requestBody:
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/Denuncia'
      responses: 
        '200':
          $ref: '#/components/responses/MuitasDenuncias'
        '400': 
          $ref: '#/components/responses/BadRequest'
        '401': 
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':  
          $ref: '#/components/responses/TooManyRequests'
        default: 
          $ref: '#/components/responses/UnexpectedError'     
             
  /vagas/{id}/denuncias/{id}:
    parameters: 
      - $ref: '#/components/parameters/id'
    get:
      tags: 
        - Denúncias
      #operationId: 
      #summary: 
      description: Retorna uma denúncia específica
      responses: 
        '200':
          $ref: '#/components/responses/UmaDenuncia'
        '400': 
          $ref: '#/components/responses/BadRequest'
        '401': 
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':  
          $ref: '#/components/responses/TooManyRequests'
        default: 
          $ref: '#/components/responses/UnexpectedError'
    put:
      tags: 
        - Denúncias
      #operationId: 
      #summary: 
      description: Editar uma denúncia
      responses: 
        '201':
          $ref: '#/components/responses/UmaDenuncia'
        '400': 
          $ref: '#/components/responses/BadRequest'
        '401': 
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':  
          $ref: '#/components/responses/TooManyRequests'
        default: 
          $ref: '#/components/responses/UnexpectedError'
    delete:   
      tags: 
        - Denúncias
      #operationId: 
      #summary: 
      description: Deletar uma denúncia
      responses: 
        '204':
          description: Denúncia deletada com sucesso
        '400': 
          $ref: '#/components/responses/BadRequest'
        '401': 
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':  
          $ref: '#/components/responses/TooManyRequests'
        default: 
          $ref: '#/components/responses/UnexpectedError'

  /me/blocked/vagas: 
    get:
      tags:
        - Moderação
      #operationId: 
      #summary: 
      description: Vagas bloqueadas pela instituição
      responses:
        '200': 
          $ref: '#/components/responses/MuitasVagas'
        '400': 
          $ref: '#/components/responses/BadRequest'
        '401': 
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':  
          $ref: '#/components/responses/TooManyRequests'
        default: 
          $ref: '#/components/responses/UnexpectedError'
  
  /me/blocked/vagas/{id}: 
    parameters: 
      - $ref: '#/components/parameters/id'
    post: 
      tags: 
        - Moderação
      #operationId: 
      summary: Bloquear vaga
      description: Bloquear uma vaga
      responses:
        '201': 
          $ref: '#/components/responses/MuitasVagas' 
        '400': 
          $ref: '#/components/responses/BadRequest'
        '401': 
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':  
          $ref: '#/components/responses/TooManyRequests'
        default: 
          $ref: '#/components/responses/UnexpectedError'
    delete: 
      tags: 
        - Moderação
      #operationId: 
      summary: Desbloquear vaga
      description: Desbloquear uma vaga
      responses:
        '204': 
          description: Vaga desbloqueada
        '400': 
          $ref: '#/components/responses/BadRequest'
        '401': 
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':  
          $ref: '#/components/responses/TooManyRequests'
        default: 
          $ref: '#/components/responses/UnexpectedError'
          
  /me/blocked/empresas: 
    get:
      tags:
        - Moderação
      #operationId: 
      summary: Empresas bloqueadas pela instituição
      description: Empresas bloqueadas pela instituição
      responses:
        '200': 
          $ref: '#/components/responses/MuitasEmpresas'
        '400': 
          $ref: '#/components/responses/BadRequest'
        '401': 
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':  
          $ref: '#/components/responses/TooManyRequests'
        default: 
          $ref: '#/components/responses/UnexpectedError'

  /me/blocked/empresas/{id}: 
    parameters: 
      - $ref: '#/components/parameters/id'
    post: 
      tags: 
        - Moderação
      #operationId: 
      summary: Bloquear empresa
      description: Bloquear uma empresa
      responses:
        '201': 
          $ref: '#/components/responses/MuitasEmpresas' 
        '400': 
          $ref: '#/components/responses/BadRequest'
        '401': 
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':  
          $ref: '#/components/responses/TooManyRequests'
        default: 
          $ref: '#/components/responses/UnexpectedError'
    delete: 
      tags: 
        - Moderação
      #operationId: 
      summary: Desbloquear empresa
      description: Desbloquear uma empresa
      responses:
        '204': 
          description: Empresa desbloqueada
        '400': 
          $ref: '#/components/responses/BadRequest'
        '401': 
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':  
          $ref: '#/components/responses/TooManyRequests'
        default: 
          $ref: '#/components/responses/UnexpectedError'
    
# https://stackoverflow.com/questions/19590197/how-to-define-global-parameters-in-openapi 


# Apply the "X-ACCOUNT" header globally to all paths and operations (no caso, não pode para o de cadastrar...)
security:
  - accountId: []

components:

  securitySchemes:
    accountId:
      type: apiKey
      in: header
      name: X-ACCOUNT
      description: All requests must include the `X-ACCOUNT` header containing your account ID.


  # ------------------------------------------------
  # PARAMETERS

  parameters: 
  
    # PATH PARAMS
    # identificação
    id: 
      in: path
      name: id
      required: true
      description: Identificador do recurso
      schema:
        type: integer
        minimum: 0
        example: 1
    
    # QUERY PARAMS

    # paginação: 
    limit:
      in: query
      name: limit
      description: Número máximo de registros a serem retornados 
      schema:
        type: integer
        minimum: 0
      example: 5
    offset: 
      in: query
      name: offset
      description: Localização do primeiro registro a ser retornado
      schema:
        type: integer
        minimum: 0
      example: 50
      
    # Filtros de busca (opcionais)
    area:
      in: query
      name: area
      description: Áreas de estudo, separadas por vírgula, para as quais a vaga é ofertada
      example: engenharia,informatica
      schema:
        type: string
    ies: 
      in: query
      name: ies
      description: Instituições de ensino, separadas por vírgula, para as quais as vagas são ofertadas
      example: ifsc,ufsc,udesc
      schema:
        type: string
    horario:
      in: query
      name: horario
      description: Períodos, separados por vírgula, para os quais as vagas são ofertadas
      schema:
        type: array
        items:
          type: string
          enum: 
            - matutino
            - vespertino
            - noturno
    publicado_apos:  
      in: query
      name: publicado_apos
      description: Data de publicação da vaga mais antiga a ser buscada 
      schema:
        type: string
        format: date
        example: 2024-01-27
    curso:
      in: query
      name: curso
      description: Cursos específicos, separados por vírgula, para os quais a vaga é ofertada
      schema:
        type: string
        example: desenvolvimento de sistemas
    ofertado_por: 
      in: query
      name: ofertado_por
      description: Empresa ou instituição dona da vaga
      schema: 
        type: string
        example: ufxc, nobank
    modalidade: 
      in: query
      name: modalidade
      description: Modalidade da vaga
      schema: 
        type: array
        items:
          type: string
          enum: 
            - presencial
            - distancia
            - hibrido


  # -----------------------------------------------------
  # RESPONSES

  responses:

    MeuPerfil: 
      description: Seus dados de perfil
      content: 
        application/json: 
          schema:
            $ref: '#/components/schemas/Perfil'  
  
    UmaVaga: 
      description: Vaga de estágio
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Vaga'
    
    MuitasVagas: 
      description: Uma lista de vagas de estágio
      content: 
        application/json: 
          schema:
            $ref: '#/components/schemas/CollectionVagas'
    
    UmaDenuncia:
      description: Uma denúncia feita a uma vaga
      content: 
        application/json: 
          schema:
            $ref: '#/components/schemas/Denuncia'

    MuitasDenuncias:
      description: Uma lista de denúncias feitas a vagas de estágio
      content: 
        application/json: 
          schema:
            $ref: '#/components/schemas/CollectionDenuncias'

    MuitasEmpresas:
      description: Uma lista de empresas
      content: 
        application/json: 
          schema:
            $ref: '#/components/schemas/CollectionEmpresas'
    
    UmaIE:
      description: Uma insituição de ensino
      content: 
        application/json: 
          schema:
            $ref: '#/components/schemas/IE'

    MuitasIEs:
      description: Uma lista de instituições de ensino
      content: 
        application/json: 
          schema:
            $ref: '#/components/schemas/CollectionIEs'

    BadRequest:
      description: Bad Request
      content: 
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
  
    Unauthorized: 
      description: Unauthorized
      content: 
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'

    Forbidden: 
      description: Forbidden
      content: 
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'

    TooManyRequests:
      description: Too Many Requests
      content: 
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
            
    UnexpectedError: 
      description: Unexpected Error
      content: 
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage' 


  # ----------------------------------------
  # SCHEMAS

  schemas:

    _Link: 
      readOnly: true
      type: array
      items: 
        type: object
        properties: 
          rel: 
            type: string
            example: self
            minLength: 2
            description: Descreve a relação do link com o recurso
          href: 
            type: string
            format: URI
            minLength: 2
            example: '/recursos/{id}'
            description: URI do recurso linkado
        required: 
          - rel
          - href

    TimeStamps:
      type: object
      properties: 
        created_at: 
          type: string
          format: date-time
          example: '2024-01-19T14:23:37-03:00'
        updated_at: 
          type: string
          format: date-time
          example: '2024-01-22T09:47:13-03:00'
      required: 
        - created_at
        - updated_at

    Endereco: 
      type: object
      properties:
        endereco: 
          type: string
          example: 'Rua João de Deus, 555'
        cidade: 
          type: string
          example: 'Florianópolis'
        estado:
          type: string
          minLength: 2
          maxLength: 2
          example: 'SC'
        pais: 
          type: string
          example: 'Brasil'
      required: 
        - cidade
        - estado
      description: "Ao menos cidade e estado devem ser fornecidos."
      
    Contato:
      type: object
      properties: 
        email: 
          type: string
          format: email
          example: 'contato@ies.gov.br'
        telefone:
          type: string
          example: '48 3232-2121'
      required:
        - email
      description: 'Ao menos o email deve ser fornecido'

    Perfil: 
      type: object
      properties: 
        nome: 
          type: string
          example: NoBanks
        endereco: 
          $ref: '#/components/schemas/Endereco'
        contato_geral: 
          description: 'Contato geral da instituição/ empresa'
          allOf: 
            - $ref: '#/components/schemas/Contato'
        contato_candidaturas:
          description: 'Contato para candidaturas a vagas em geral. É possível inserir contatos de candidaturas específicos quando for enviar os dados da vaga'
          allOf: 
            - $ref: '#/components/schemas/Contato'
        areas: 
          type: array
          description: 'Áreas de atuação da instituição ou empresa'
          items: 
            type: string
            example: ['fintech', 'tecnologia']
        categoria: 
          type: string
          enum: 
            - ies
            - empresa
          default: empresa
          description: "Sua categoria: Empresa ou IE  (Instituição de Ensino)"
        moderacao: 
          type: boolean
          description: Deseja ativar funções de moderação (receber denúncias de vagas, bloquear vagas ou empresas)
        notificacoes: 
          type: boolean
          description: Deseja receber notificações do sistema, tais como avisos de vagas que irão expirar, lembretes para inserir vagas
      required: 
        - nome
        - endereco
        - contato_geral
        - categoria
        - moderacao
        - notificacoes

    Vaga:
      type: object
      properties: 
        id: 
          type: integer
          minimum: 1
          example: 1
          readOnly: true
        titulo: 
          type: string
          example: 'Vaga de estágio em desenvolvimento de sistemas'
        descricao: 
          type: string
          example: "Vaga de estágio etc etc etc etc etc etc etc etc etc cte etc etc etc etc etc etc etc"
        oferecido_por: 
          type: string
          example: 'NoBanks'
        localizacao: 
          $ref: '#/components/schemas/Endereco'
        modalidade: 
          type: string
          enum: 
            - presencial
            - distancia
            - hibrido
        data_inicio:
          type: string
          format: date
          example: '2022-12-27'
        data_fim:
          type: string
          format: date
          example: '2024-06-30'
        requisitos: 
          type: array
          items:
            type: string
          example: ['Conhecimentos em React.js', 'SQL', 'PHP']
        areas: 
          type: array
          items:
            type: string
          example: ['Informática']
        nivel: 
          type: array
          items: 
            type: string
            enum: 
              - medio
              - tecnico
              - superior
              - pos
        validade: 
          type: string
          format: date
          example: '2024-02-15'
        recorrencia_meses:
          type: number
          minimum: 0
          example: 0
        contato_candidatura: 
          type: array
          items:
            $ref: '#/components/schemas/Contato'
        links_externos: 
          type: array
          items:
            type: string
            format: URI
          example: ['http://www.linkdun.com/vagas/nobanks/12545']
        remuneracao:
          type: integer
          minimum: 0
          example: 700
          description: 'Uma vaga sem remuneração pode ser entendida como uma vaga de voluntariado. Seja claro a respeito da faixa de remuneração que deseja oferecer aos candidatos.'
        criado_por: 
          type: string
          example: User0123
          description: 'Campo para identificação interna do sistema da instituição ou empresa. Útil para o caso de vagas criadas por professores de laboratórios. Caso este campo seja informado, apenas o usuário indicado no campo poderá editar a vaga no futuro. Se o campo não for indicado, qualquer usuário interno poderá ter acesso à vaga.'
        timestamps: 
          $ref: '#/components/schemas/TimeStamps'
        _links: 
          $ref: '#/components/schemas/_Link'
      required: 
        - titulo
        - modalidade
        - descricao
        - localizacao
        - data_inicio
        - oferecido_por
        - areas
        - nivel
        - validade
        - recorrencia_meses
        - contatos
        - remuneracao
      description: Vaga de Estágio
      
    # https://learn.openapis.org/specification/components.html
    
    Denuncia: 
      type: object
      properties:
        descricao: 
          type: string
          example: 'Esta vaga não corresponde aos critérios de uma vaga de estágio. Horas de trabalho muito elevadas e função não corresponde a nenhuma área de estudo da instituição'
        data: 
          type: string
          format: date-time
          example: '2024-01-22T11:05:30-03:00'
        links: 
          type: array
          items: 
            type: object
            properties: 
              rel: 
                type: string
                example: self
              link: 
                type: string
                format: URI
                example: /denuncias/1
   
    IE: 
      type: object
      properties:
        id: 
          type: integer
          minimum: 1
          example: 2
        nome: 
          type: string
          minLength: 2
          example: 'IFSC'
        localizacao: 
          $ref: '#/components/schemas/Endereco'
        _links: 
          $ref: '#/components/schemas/_Link'
      required: 
        - id
        - nome
        - localizacao
        - _links
      description: Instituição de Ensino

    Empresa:
      type: object
      properties:
        id: 
          type: integer
          minimum: 1
          example: 2
          readOnly: true
        nome:
          type: string
          example: 'NoBank'
        area: 
          type: array
          items: 
            type: string
          example: ['fintech', 'tecnologia']
        localizacao:
          $ref: '#/components/schemas/Endereco'
        contato: 
          $ref: '#/components/schemas/Contato'
        _links: 
          $ref: '#/components/schemas/_Link'
      required:
        - id
        - nome
        - area
        - localizacao
        - contato
        - _links

    CollectionMetadata: 
      type: object
      properties: 
        _total: 
          type: integer
          minimum: 0
          example: 3
        _links: 
          type: array
          items: 
            type: object
            properties: 
              rel: 
                type: string
                example: next
              href: 
                type: string
                format: uri
                
    CollectionVagas: 
      allOf: 
        - $ref: '#/components/schemas/CollectionMetadata'
        - type: object
          properties: 
            items: 
              type: array
              items:
                $ref: '#/components/schemas/Vaga'
    
    CollectionDenuncias: 
      allOf: 
        - $ref: '#/components/schemas/CollectionMetadata'
        - type: object
          properties: 
            items: 
              type: array
              items:
                $ref: '#/components/schemas/Denuncia'

    CollectionIEs: 
      allOf: 
        - $ref: '#/components/schemas/CollectionMetadata'
        - type: object
          properties: 
            items: 
              type: array
              items:
                $ref: '#/components/schemas/IE'
 
    CollectionEmpresas: 
      allOf: 
        - $ref: '#/components/schemas/CollectionMetadata'
        - type: object
          properties: 
            items: 
              type: array
              items:
                $ref: '#/components/schemas/Empresa'
           
    ErrorMessage:
      type: object
      properties: 
        code: 
          type: string
          minLength: 3
          maxLength: 3
          example: '400'
          description: 'HTTP Response Code'
        message: 
          type: string
          example: 'Resource could not be found'
          description: 'Error message'
      required:
        - code
        - message